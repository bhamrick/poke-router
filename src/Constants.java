
public class Constants {
    static final String hashName(String s) {
        return s.toUpperCase().replaceAll("\\W", "");
    }
    
    static final String endl = System.getProperty("line.separator");
    static final int numPokes = 151;
    
    //used to initialize all species
    static final String[] poke_names = {
        "Select Pokemon",
        "Bulbasaur", 
        "Ivysaur", 
        "Venusaur", 
        "Charmander", 
        "Charmeleon", 
        "Charizard", 
        "Squirtle", 
        "Wartortle", 
        "Blastoise", 
        "Caterpie", 
        "Metapod", 
        "Butterfree", 
        "Weedle", 
        "Kakuna", 
        "Beedrill", 
        "Pidgey", 
        "Pidgeotto", 
        "Pidgeot", 
        "Rattata", 
        "Raticate", 
        "Spearow", 
        "Fearow", 
        "Ekans", 
        "Arbok", 
        "Pikachu", 
        "Raichu", 
        "Sandshrew", 
        "Sandslash", 
        "NidoranF", 
        "Nidorina", 
        "Nidoqueen", 
        "NidoranM", 
        "Nidorino", 
        "Nidoking", 
        "Clefairy", 
        "Clefable", 
        "Vulpix", 
        "Ninetales", 
        "Jigglypuff", 
        "Wigglytuff", 
        "Zubat", 
        "Golbat", 
        "Oddish", 
        "Gloom", 
        "Vileplume", 
        "Paras", 
        "Parasect", 
        "Venonat", 
        "Venomoth", 
        "Diglett", 
        "Dugtrio", 
        "Meowth", 
        "Persian", 
        "Psyduck", 
        "Golduck", 
        "Mankey", 
        "Primeape", 
        "Growlithe", 
        "Arcanine", 
        "Poliwag", 
        "Poliwhirl", 
        "Poliwrath", 
        "Abra", 
        "Kadabra", 
        "Alakazam", 
        "Machop", 
        "Machoke", 
        "Machamp", 
        "Bellsprout", 
        "Weepinbell", 
        "Victreebel", 
        "Tentacool", 
        "Tentacruel", 
        "Geodude", 
        "Graveler", 
        "Golem", 
        "Ponyta", 
        "Rapidash", 
        "Slowpoke", 
        "Slowbro", 
        "Magnemite", 
        "Magneton", 
        "Farfetchd", 
        "Doduo", 
        "Dodrio", 
        "Seel", 
        "Dewgong", 
        "Grimer", 
        "Muk", 
        "Shellder", 
        "Cloyster", 
        "Gastly", 
        "Haunter", 
        "Gengar", 
        "Onix", 
        "Drowzee", 
        "Hypno", 
        "Krabby", 
        "Kingler", 
        "Voltorb", 
        "Electrode", 
        "Exeggcute", 
        "Exeggutor", 
        "Cubone", 
        "Marowak", 
        "Hitmonlee", 
        "Hitmonchan", 
        "Lickitung", 
        "Koffing", 
        "Weezing", 
        "Rhyhorn", 
        "Rhydon", 
        "Chansey", 
        "Tangela", 
        "Kangaskhan", 
        "Horsea", 
        "Seadra", 
        "Goldeen", 
        "Seaking", 
        "Staryu", 
        "Starmie", 
        "MrMime", 
        "Scyther", 
        "Jynx", 
        "Electabuzz", 
        "Magmar", 
        "Pinsir", 
        "Tauros", 
        "Magikarp", 
        "Gyarados", 
        "Lapras", 
        "Ditto", 
        "Eevee", 
        "Vaporeon", 
        "Jolteon", 
        "Flareon", 
        "Porygon", 
        "Omanyte", 
        "Omastar", 
        "Kabuto", 
        "Kabutops", 
        "Aerodactyl", 
        "Snorlax", 
        "Articuno", 
        "Zapdos", 
        "Moltres", 
        "Dratini", 
        "Dragonair", 
        "Dragonite", 
        "Mewtwo", 
        "Mew",
    };
    static final int[] killexps = {
        0,
        64, 
        141, 
        208, 
        65, 
        142, 
        209, 
        66, 
        143, 
        210, 
        53, 
        72, 
        160, 
        52, 
        71, 
        159, 
        55, 
        113, 
        172, 
        57, 
        116, 
        58, 
        162, 
        62, 
        147, 
        82, 
        122, 
        93, 
        163, 
        59, 
        117, 
        194, 
        60, 
        118, 
        195, 
        68, 
        129, 
        63, 
        178, 
        76, 
        109, 
        54, 
        171, 
        78, 
        132, 
        184, 
        70, 
        128, 
        75, 
        138, 
        81, 
        153, 
        69, 
        148, 
        80, 
        174, 
        74, 
        149, 
        91, 
        213, 
        77, 
        131, 
        185, 
        73, 
        145, 
        186, 
        88, 
        146, 
        193, 
        84, 
        151, 
        191, 
        105, 
        205, 
        86, 
        134, 
        177, 
        152, 
        192, 
        99, 
        164, 
        89, 
        169, 
        94, 
        96, 
        158, 
        100, 
        176, 
        90, 
        157, 
        97, 
        203, 
        95, 
        126, 
        190, 
        108, 
        102, 
        165, 
        115, 
        206, 
        103, 
        150, 
        98, 
        212, 
        87, 
        124, 
        139, 
        140, 
        127, 
        114, 
        173, 
        135, 
        204, 
        255, 
        166, 
        175, 
        83, 
        155, 
        111, 
        170, 
        106, 
        207, 
        136, 
        187, 
        137, 
        156, 
        167, 
        200, 
        211, 
        20, 
        214, 
        219, 
        61, 
        92, 
        196, 
        197, 
        198, 
        130, 
        120, 
        199, 
        119, 
        201, 
        202, 
        154, 
        215, 
        216, 
        217, 
        67, 
        144, 
        218, 
        220, 
        64,
        };
    final static int[][] basestats = {
        {0, 0, 0, 0, 0}, 
        {45, 49, 49, 45, 65},
        {60, 62, 63, 60, 80},
        {80, 82, 83, 80, 100},
        {39, 52, 43, 65, 50},
        {58, 64, 58, 80, 65},
        {78, 84, 78, 100, 85},
        {44, 48, 65, 43, 50},
        {59, 63, 80, 58, 65},
        {79, 83, 100, 78, 85},
        {45, 30, 35, 45, 20},
        {50, 20, 55, 30, 25},
        {60, 45, 50, 70, 80},
        {40, 35, 30, 50, 20},
        {45, 25, 50, 35, 25},
        {65, 80, 40, 75, 45},
        {40, 45, 40, 56, 35},
        {63, 60, 55, 71, 50},
        {83, 80, 75, 91, 70},
        {30, 56, 35, 72, 25},
        {55, 81, 60, 97, 50},
        {40, 60, 30, 70, 31},
        {65, 90, 65, 100, 61},
        {35, 60, 44, 55, 40},
        {60, 85, 69, 80, 65},
        {35, 55, 30, 90, 50},
        {60, 90, 55, 100, 90},
        {50, 75, 85, 40, 30},
        {75, 100, 110, 65, 55},
        {55, 47, 52, 41, 40},
        {70, 62, 67, 56, 55},
        {90, 82, 87, 76, 75},
        {46, 57, 40, 50, 40},
        {61, 72, 57, 65, 55},
        {81, 92, 77, 85, 75},
        {70, 45, 48, 35, 60},
        {95, 70, 73, 60, 85},
        {38, 41, 40, 65, 65},
        {73, 76, 75, 100, 100},
        {115, 45, 20, 20, 25},
        {140, 70, 45, 45, 50},
        {40, 45, 35, 55, 40},
        {75, 80, 70, 90, 75},
        {45, 50, 55, 30, 75},
        {60, 65, 70, 40, 85},
        {75, 80, 85, 50, 100},
        {35, 70, 55, 25, 55},
        {60, 95, 80, 30, 80},
        {60, 55, 50, 45, 40},
        {70, 65, 60, 90, 90},
        {10, 55, 25, 95, 45},
        {35, 80, 50, 120, 70},
        {40, 45, 35, 90, 40},
        {65, 70, 60, 115, 65},
        {50, 52, 48, 55, 50},
        {80, 82, 78, 85, 80},
        {40, 80, 35, 70, 35},
        {65, 105, 60, 95, 60},
        {55, 70, 45, 60, 50},
        {90, 110, 80, 95, 80},
        {40, 50, 40, 90, 40},
        {65, 65, 65, 90, 50},
        {90, 85, 95, 70, 70},
        {25, 20, 15, 90, 105},
        {40, 35, 30, 105, 120},
        {55, 50, 45, 120, 135},
        {70, 80, 50, 35, 35},
        {80, 100, 70, 45, 50},
        {90, 130, 80, 55, 65},
        {50, 75, 35, 40, 70},
        {65, 90, 50, 55, 85},
        {80, 105, 65, 70, 100},
        {40, 40, 35, 70, 100},
        {80, 70, 65, 100, 120},
        {40, 80, 100, 20, 30},
        {55, 95, 115, 35, 45},
        {80, 110, 130, 45, 55},
        {50, 85, 55, 90, 65},
        {65, 100, 70, 105, 80},
        {90, 65, 65, 15, 40},
        {95, 75, 110, 30, 80},
        {25, 35, 70, 45, 95},
        {50, 60, 95, 70, 120},
        {52, 65, 55, 60, 58},
        {35, 85, 45, 75, 35},
        {60, 110, 70, 100, 60},
        {65, 45, 55, 45, 70},
        {90, 70, 80, 70, 95},
        {80, 80, 50, 25, 40},
        {105, 105, 75, 50, 65},
        {30, 65, 100, 40, 45},
        {50, 95, 180, 70, 85},
        {30, 35, 30, 80, 100},
        {45, 50, 45, 95, 115},
        {60, 65, 60, 110, 130},
        {35, 45, 160, 70, 30},
        {60, 48, 45, 42, 90},
        {85, 73, 70, 67, 115},
        {30, 105, 90, 50, 25},
        {55, 130, 115, 75, 50},
        {40, 30, 50, 100, 55},
        {60, 50, 70, 140, 80},
        {60, 40, 80, 40, 60},
        {95, 95, 85, 55, 125},
        {50, 50, 95, 35, 40},
        {60, 80, 110, 45, 50},
        {50, 120, 53, 87, 35},
        {50, 105, 79, 76, 35},
        {90, 55, 75, 30, 60},
        {40, 65, 95, 35, 60},
        {65, 90, 120, 60, 85},
        {80, 85, 95, 25, 30},
        {105, 130, 120, 40, 45},
        {250, 5, 5, 50, 105},
        {65, 55, 115, 60, 100},
        {105, 95, 80, 90, 40},
        {30, 40, 70, 60, 70},
        {55, 65, 95, 85, 95},
        {45, 67, 60, 63, 50},
        {80, 92, 65, 68, 80},
        {30, 45, 55, 85, 70},
        {60, 75, 85, 115, 100},
        {40, 45, 65, 90, 100},
        {70, 110, 80, 105, 55},
        {65, 50, 35, 95, 95},
        {65, 83, 57, 105, 85},
        {65, 95, 57, 93, 85},
        {65, 125, 100, 85, 55},
        {75, 100, 95, 110, 70},
        {20, 10, 55, 80, 20},
        {95, 125, 79, 81, 100},
        {130, 85, 80, 60, 95},
        {48, 48, 48, 48, 48},
        {55, 55, 50, 55, 65},
        {130, 65, 60, 65, 110},
        {65, 65, 60, 130, 110},
        {65, 130, 60, 65, 110},
        {65, 60, 70, 40, 75},
        {35, 40, 100, 35, 90},
        {70, 60, 125, 55, 115},
        {30, 80, 90, 55, 45},
        {60, 115, 105, 80, 70},
        {80, 105, 65, 130, 60},
        {160, 110, 65, 30, 65},
        {90, 85, 100, 85, 125},
        {90, 90, 85, 100, 125},
        {90, 100, 90, 90, 125},
        {41, 64, 45, 50, 50},
        {61, 84, 65, 70, 70},
        {91, 134, 95, 80, 100},
        {106, 110, 90, 130, 154},
        {100, 100, 100, 100, 100},
    };
    static final ExpCurve[] exp_curves = {
        ExpCurve.NONE,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.FAST,
        ExpCurve.FAST,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.FAST,
        ExpCurve.FAST,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM_SLOW,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.FAST,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.MEDIUM,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.SLOW,
        ExpCurve.MEDIUM_SLOW,
        };
    static final Type[][] poke_types = {
        {Type.NONE},
        {Type.GRASS, Type.POISON},
        {Type.GRASS, Type.POISON},
        {Type.GRASS, Type.POISON},
        {Type.FIRE},
        {Type.FIRE},
        {Type.FIRE, Type.FLYING},
        {Type.WATER},
        {Type.WATER},
        {Type.WATER},
        {Type.BUG},
        {Type.BUG},
        {Type.BUG, Type.FLYING},
        {Type.BUG, Type.POISON},
        {Type.BUG, Type.POISON},
        {Type.BUG, Type.POISON},
        {Type.NORMAL, Type.FLYING},
        {Type.NORMAL, Type.FLYING},
        {Type.NORMAL, Type.FLYING},
        {Type.NORMAL},
        {Type.NORMAL},
        {Type.NORMAL, Type.FLYING},
        {Type.NORMAL, Type.FLYING},
        {Type.POISON},
        {Type.POISON},
        {Type.ELECTRIC},
        {Type.ELECTRIC},
        {Type.GROUND},
        {Type.GROUND},
        {Type.POISON},
        {Type.POISON},
        {Type.POISON, Type.GROUND},
        {Type.POISON},
        {Type.POISON},
        {Type.POISON, Type.GROUND},
        {Type.NORMAL},
        {Type.NORMAL},
        {Type.FIRE},
        {Type.FIRE},
        {Type.NORMAL},
        {Type.NORMAL},
        {Type.POISON, Type.FLYING},
        {Type.POISON, Type.FLYING},
        {Type.GRASS, Type.POISON},
        {Type.GRASS, Type.POISON},
        {Type.GRASS, Type.POISON},
        {Type.BUG, Type.GRASS},
        {Type.BUG, Type.GRASS},
        {Type.BUG, Type.POISON},
        {Type.BUG, Type.POISON},
        {Type.GROUND},
        {Type.GROUND},
        {Type.NORMAL},
        {Type.NORMAL},
        {Type.WATER},
        {Type.WATER},
        {Type.FIGHTING},
        {Type.FIGHTING},
        {Type.FIRE},
        {Type.FIRE},
        {Type.WATER},
        {Type.WATER},
        {Type.WATER, Type.FIGHTING},
        {Type.PSYCHIC},
        {Type.PSYCHIC},
        {Type.PSYCHIC},
        {Type.FIGHTING},
        {Type.FIGHTING},
        {Type.FIGHTING},
        {Type.GRASS, Type.POISON},
        {Type.GRASS, Type.POISON},
        {Type.GRASS, Type.POISON},
        {Type.WATER, Type.POISON},
        {Type.WATER, Type.POISON},
        {Type.ROCK, Type.GROUND},
        {Type.ROCK, Type.GROUND},
        {Type.ROCK, Type.GROUND},
        {Type.FIRE},
        {Type.FIRE},
        {Type.WATER, Type.PSYCHIC},
        {Type.WATER, Type.PSYCHIC},
        {Type.ELECTRIC},
        {Type.ELECTRIC},
        {Type.NORMAL, Type.FLYING},
        {Type.NORMAL, Type.FLYING},
        {Type.NORMAL, Type.FLYING},
        {Type.WATER},
        {Type.WATER, Type.ICE},
        {Type.POISON},
        {Type.POISON},
        {Type.WATER},
        {Type.WATER, Type.ICE},
        {Type.GHOST, Type.POISON},
        {Type.GHOST, Type.POISON},
        {Type.GHOST, Type.POISON},
        {Type.ROCK, Type.GROUND},
        {Type.PSYCHIC},
        {Type.PSYCHIC},
        {Type.WATER},
        {Type.WATER},
        {Type.ELECTRIC},
        {Type.ELECTRIC},
        {Type.GRASS, Type.PSYCHIC},
        {Type.GRASS, Type.PSYCHIC},
        {Type.GROUND},
        {Type.GROUND},
        {Type.FIGHTING},
        {Type.FIGHTING},
        {Type.NORMAL},
        {Type.POISON},
        {Type.POISON},
        {Type.GROUND, Type.ROCK},
        {Type.GROUND, Type.ROCK},
        {Type.NORMAL},
        {Type.GRASS},
        {Type.NORMAL},
        {Type.WATER},
        {Type.WATER},
        {Type.WATER},
        {Type.WATER},
        {Type.WATER},
        {Type.WATER, Type.PSYCHIC},
        {Type.PSYCHIC},
        {Type.BUG, Type.FLYING},
        {Type.ICE, Type.PSYCHIC},
        {Type.ELECTRIC},
        {Type.FIRE},
        {Type.BUG},
        {Type.NORMAL},
        {Type.WATER},
        {Type.WATER, Type.FLYING},
        {Type.WATER, Type.ICE},
        {Type.NORMAL},
        {Type.NORMAL},
        {Type.WATER},
        {Type.ELECTRIC},
        {Type.FIRE},
        {Type.NORMAL},
        {Type.ROCK, Type.WATER},
        {Type.ROCK, Type.WATER},
        {Type.ROCK, Type.WATER},
        {Type.ROCK, Type.WATER},
        {Type.ROCK, Type.FLYING},
        {Type.NORMAL},
        {Type.ICE, Type.FLYING},
        {Type.ELECTRIC, Type.FLYING},
        {Type.FIRE, Type.FLYING},
        {Type.DRAGON},
        {Type.DRAGON},
        {Type.DRAGON, Type.FLYING},
        {Type.PSYCHIC},
        {Type.PSYCHIC},
        };
    
    //used to initialize all moves
    static final int numMoves = 165;
    static final String[] move_names = {
        "None",
        "Pound",
        "Karate Chop",
        "DoubleSlap",
        "Comet Punch",
        "Mega Punch",
        "Pay Day",
        "Fire Punch",
        "Ice Punch",
        "ThunderPunch",
        "Scratch",
        "ViceGrip",
        "Guillotine",
        "Razor Wind",
        "Swords Dance",
        "Cut",
        "Gust",
        "Wing Attack",
        "Whirlwind",
        "Fly",
        "Bind",
        "Slam",
        "Vine Whip",
        "Stomp",
        "Double Kick",
        "Mega Kick",
        "Jump Kick",
        "Rolling Kick",
        "Sand-Attack",
        "Headbutt",
        "Horn Attack",
        "Fury Attack",
        "Horn Drill",
        "Tackle",
        "Body Slam",
        "Wrap",
        "Take Down",
        "Thrash",
        "Double-Edge",
        "Tail Whip",
        "Poison Sting",
        "Twineedle",
        "Pin Missile",
        "Leer",
        "Bite",
        "Growl",
        "Roar",
        "Sing",
        "Supersonic",
        "SonicBoom",
        "Disable",
        "Acid",
        "Ember",
        "Flamethrower",
        "Mist",
        "Water Gun",
        "Hydro Pump",
        "Surf",
        "Ice Beam",
        "Blizzard",
        "Psybeam",
        "BubbleBeam",
        "Aurora Beam",
        "Hyper Beam",
        "Peck",
        "Drill Peck",
        "Submission",
        "Low Kick",
        "Counter",
        "Seismic Toss",
        "Strength",
        "Absorb",
        "Mega Drain",
        "Leech Seed",
        "Growth",
        "Razor Leaf",
        "SolarBeam",
        "PoisonPowder",
        "Stun Spore",
        "Sleep Powder",
        "Petal Dance",
        "String Shot",
        "Dragon Rage",
        "Fire Spin",
        "ThunderShock",
        "Thunderbolt",
        "Thunder Wave",
        "Thunder",
        "Rock Throw",
        "Earthquake",
        "Fissure",
        "Dig",
        "Toxic",
        "Confusion",
        "Psychic",
        "Hypnosis",
        "Meditate",
        "Agility",
        "Quick Attack",
        "Rage",
        "Teleport",
        "Night Shade",
        "Mimic",
        "Screech",
        "Double Team",
        "Recover",
        "Harden",
        "Minimize",
        "SmokeScreen",
        "Confuse Ray",
        "Withdraw",
        "Defense Curl",
        "Barrier",
        "Light Screen",
        "Haze",
        "Reflect",
        "Focus Energy",
        "Bide",
        "Metronome",
        "Mirror Move",
        "Selfdestruct",
        "Egg Bomb",
        "Lick",
        "Smog",
        "Sludge",
        "Bone Club",
        "Fire Blast",
        "Waterfall",
        "Clamp",
        "Swift",
        "Skull Bash",
        "Spike Cannon",
        "Constrict",
        "Amnesia",
        "Kinesis",
        "Softboiled",
        "Hi Jump Kick",
        "Glare",
        "Dream Eater",
        "Poison Gas",
        "Barrage",
        "Leech Life",
        "Lovely Kiss",
        "Sky Attack",
        "Transform",
        "Bubble",
        "Dizzy Punch",
        "Spore",
        "Flash",
        "Psywave",
        "Splash",
        "Acid Armor",
        "Crabhammer",
        "Explosion",
        "Fury Swipes",
        "Bonemerang",
        "Rest",
        "Rock Slide",
        "Hyper Fang",
        "Sharpen",
        "Conversion",
        "Tri Attack",
        "Super Fang",
        "Slash",
        "Substitute",
        "Struggle",
    };
    static final Type[] move_types = {
        Type.NONE,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.FIRE,
        Type.ICE,
        Type.ELECTRIC,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.FLYING,
        Type.NORMAL,
        Type.FLYING,
        Type.NORMAL,
        Type.NORMAL,
        Type.GRASS,
        Type.NORMAL,
        Type.FIGHTING,
        Type.NORMAL,
        Type.FIGHTING,
        Type.FIGHTING,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.POISON,
        Type.BUG,
        Type.BUG,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.POISON,
        Type.FIRE,
        Type.FIRE,
        Type.ICE,
        Type.WATER,
        Type.WATER,
        Type.WATER,
        Type.ICE,
        Type.ICE,
        Type.PSYCHIC,
        Type.WATER,
        Type.ICE,
        Type.NORMAL,
        Type.FLYING,
        Type.FLYING,
        Type.FIGHTING,
        Type.FIGHTING,
        Type.FIGHTING,
        Type.FIGHTING,
        Type.NORMAL,
        Type.GRASS,
        Type.GRASS,
        Type.GRASS,
        Type.NORMAL,
        Type.GRASS,
        Type.GRASS,
        Type.POISON,
        Type.GRASS,
        Type.GRASS,
        Type.GRASS,
        Type.BUG,
        Type.DRAGON,
        Type.FIRE,
        Type.ELECTRIC,
        Type.ELECTRIC,
        Type.ELECTRIC,
        Type.ELECTRIC,
        Type.ROCK,
        Type.GROUND,
        Type.GROUND,
        Type.GROUND,
        Type.POISON,
        Type.PSYCHIC,
        Type.PSYCHIC,
        Type.PSYCHIC,
        Type.PSYCHIC,
        Type.PSYCHIC,
        Type.NORMAL,
        Type.NORMAL,
        Type.PSYCHIC,
        Type.GHOST,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.GHOST,
        Type.WATER,
        Type.NORMAL,
        Type.PSYCHIC,
        Type.PSYCHIC,
        Type.ICE,
        Type.PSYCHIC,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.FLYING,
        Type.NORMAL,
        Type.NORMAL,
        Type.GHOST,
        Type.POISON,
        Type.POISON,
        Type.GROUND,
        Type.FIRE,
        Type.WATER,
        Type.WATER,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.PSYCHIC,
        Type.PSYCHIC,
        Type.NORMAL,
        Type.FIGHTING,
        Type.NORMAL,
        Type.PSYCHIC,
        Type.POISON,
        Type.NORMAL,
        Type.BUG,
        Type.NORMAL,
        Type.FLYING,
        Type.NORMAL,
        Type.WATER,
        Type.NORMAL,
        Type.GRASS,
        Type.NORMAL,
        Type.PSYCHIC,
        Type.NORMAL,
        Type.POISON,
        Type.WATER,
        Type.NORMAL,
        Type.NORMAL,
        Type.GROUND,
        Type.PSYCHIC,
        Type.ROCK,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        Type.NORMAL,
        };
    static final int[] pps = {
        0,
        35,
        25,
        10,
        15,
        20,
        20,
        15,
        15,
        15,
        35,
        30,
        5,
        10,
        30,
        30,
        35,
        35,
        20,
        15,
        20,
        20,
        10,
        20,
        30,
        5,
        25,
        15,
        15,
        15,
        25,
        20,
        5,
        30,
        15,
        20,
        20,
        20,
        15,
        30,
        35,
        20,
        20,
        30,
        25,
        40,
        20,
        15,
        20,
        20,
        20,
        30,
        25,
        15,
        30,
        25,
        5,
        15,
        10,
        5,
        20,
        20,
        20,
        5,
        35,
        20,
        25,
        20,
        20,
        20,
        15,
        20,
        10,
        10,
        40,
        25,
        10,
        35,
        30,
        15,
        20,
        40,
        10,
        15,
        30,
        15,
        20,
        10,
        15,
        10,
        5,
        10,
        10,
        25,
        10,
        20,
        40,
        30,
        30,
        20,
        20,
        15,
        10,
        40,
        15,
        20,
        30,
        20,
        20,
        10,
        40,
        40,
        30,
        30,
        30,
        20,
        30,
        10,
        10,
        20,
        5,
        10,
        30,
        20,
        20,
        20,
        5,
        15,
        10,
        20,
        15,
        15,
        35,
        20,
        15,
        10,
        20,
        30,
        15,
        40,
        20,
        15,
        10,
        5,
        10,
        30,
        10,
        15,
        20,
        15,
        40,
        40,
        10,
        5,
        15,
        10,
        10,
        10,
        15,
        30,
        30,
        10,
        10,
        20,
        10,
        1,
        };
    //powers less than 0 indicate something weird (usually not a damaging attack)
    static final int[] base_powers = {
        0,
        40,
        50,
        15,
        18,
        80,
        40,
        75,
        75,
        75,
        40,
        55,
        -1,
        80,
        -1,
        50,
        40,
        35,
        -1,
        70,
        15,
        80,
        35,
        65,
        30,
        120,
        70,
        60,
        -1,
        70,
        65,
        15,
        -1,
        35,
        85,
        15,
        90,
        90,
        100,
        -1,
        15,
        25,
        14,
        -1,
        60,
        -1,
        -1,
        -1,
        -1,
        -2,
        -1,
        40,
        40,
        95,
        -1,
        40,
        120,
        95,
        95,
        120,
        65,
        65,
        65,
        150,
        35,
        80,
        80,
        50,
        -1,
        -1,
        80,
        20,
        40,
        -1,
        -1,
        55,
        120,
        -1,
        -1,
        -1,
        70,
        -1,
        -2,
        15,
        40,
        95,
        -1,
        120,
        50,
        100,
        -1,
        100,
        -1,
        50,
        90,
        -1,
        -1,
        -1,
        40,
        20,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        260,
        100,
        20,
        20,
        65,
        65,
        120,
        80,
        35,
        60,
        100,
        20,
        10,
        -1,
        -1,
        -1,
        85,
        -1,
        100,
        -1,
        15,
        20,
        -1,
        140,
        -1,
        20,
        70,
        -1,
        -1,
        -1,
        -1,
        -1,
        90,
        340,
        18,
        50,
        -1,
        75,
        80,
        -1,
        -1,
        80,
        -1,
        70,
        -1,
        50,
        };
    static final int[] accuracies = {
        0,
        100,
        100,
        85,
        85,
        85,
        100,
        100,
        100,
        100,
        100,
        100,
        30,
        75,
        100,
        95,
        100,
        100,
        100,
        95,
        75,
        75,
        100,
        100,
        100,
        75,
        95,
        85,
        100,
        100,
        100,
        85,
        30,
        95,
        100,
        85,
        85,
        100,
        100,
        100,
        100,
        100,
        85,
        100,
        100,
        100,
        100,
        55,
        55,
        90,
        80,
        100,
        100,
        100,
        100,
        100,
        80,
        100,
        100,
        90,
        100,
        100,
        100,
        90,
        100,
        100,
        80,
        90,
        100,
        100,
        100,
        100,
        100,
        90,
        100,
        95,
        100,
        75,
        75,
        75,
        100,
        95,
        100,
        70,
        100,
        100,
        100,
        70,
        65,
        100,
        30,
        100,
        85,
        100,
        100,
        60,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        85,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        75,
        100,
        70,
        100,
        85,
        85,
        100,
        75,
        100,
        100,
        100,
        100,
        100,
        80,
        100,
        90,
        75,
        100,
        55,
        85,
        100,
        75,
        90,
        100,
        100,
        100,
        100,
        70,
        80,
        100,
        100,
        85,
        100,
        80,
        90,
        100,
        90,
        90,
        100,
        100,
        100,
        90,
        100,
        100,
        100,
        };

    static final int numItems = 255;
    static final String[] item_names = {
        "#, j (Glitch Item)", // 0x00
        "Master Ball",
        "Ultra Ball",
        "Great Ball",
        "Poke Ball",
        "Town Map",
        "Bicycle",
        "Surfboard",
        "Safari Ball",
        "Pokedex",
        "Moon Stone",
        "Antidote",
        "Burn Heal",
        "Ice Heal",
        "Awakening",
        "Parlyz Heal",
        "Full Restore", // 0x10
        "Max Potion",
        "Hyper Potion",
        "Super Potion",
        "Potion",
        "Boulderbadge",
        "Cascadebadge",
        "Thunderbadge",
        "Rainbowbadge",
        "Soulbadge",
        "Marshbadge",
        "Volcanobadge",
        "Earthbadge",
        "Escape Rope",
        "Repel",
        "Old Amber",
        "Fire Stone", // 0x20
        "Thunder Stone",
        "Water Stone",
        "HP UP",
        "Protein",
        "Iron",
        "Carbos",
        "Calcium",
        "Rare Candy",
        "Dome Fossil",
        "Helix Fossil",
        "Secret Key",
        "???", // 0x2C
        "Bike Voucher",
        "X Accuracy",
        "Leaf Stone",
        "Card Key", // 0x30
        "Nugget",
        "PP UP (Glitched)", // 0x32
        "Pokedoll",
        "Full Heal",
        "Revive",
        "Max Revive",
        "Guard Spec",
        "Super Repel",
        "Max Repel",
        "Dire Hit",
        "Coin",
        "Fresh Water",
        "Soda Pop",
        "Lemonade",
        "S S Ticket",
        "Gold Teeth", // 0x40
        "X Attack",
        "X Defend",
        "X Speed",
        "X Special",
        "Coin Case",
        "Oak's Parcel",
        "Itemfinder",
        "Silph Scope",
        "Poke Flute",
        "Lift Key",
        "Exp All",
        "Old Rod",
        "Good Rod",
        "Super Rod",
        "PP UP",
        "Ether", // 0x50
        "Max Ether",
        "Elixer",
        "Max Elixer", // 0x53
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???", // 0x60
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???", // 0x70
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???", // 0x80
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???", // 0x90
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???", // 0xA0
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???", // 0xB0
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???",
        "???", // 0xC0
        "???",
        "???",
        "???",
        "HM01", // 0xC4
        "HM02",
        "HM03",
        "HM04",
        "HM05",
        "TM01",
        "TM02",
        "TM03",
        "TM04",
        "TM05",
        "TM06",
        "TM07",
        "TM08", // 0xD0
        "TM09",
        "TM10",
        "TM11",
        "TM12",
        "TM13",
        "TM14",
        "TM15",
        "TM16",
        "TM17",
        "TM18",
        "TM19",
        "TM20",
        "TM21",
        "TM22",
        "TM23",
        "TM24", // 0xE0
        "TM25",
        "TM26",
        "TM27",
        "TM28",
        "TM29",
        "TM30",
        "TM31",
        "TM32",
        "TM33",
        "TM34",
        "TM35",
        "TM36",
        "TM37",
        "TM38",
        "TM39",
        "TM40", // 0xF0
        "TM41",
        "TM42",
        "TM43",
        "TM44",
        "TM45",
        "TM46",
        "TM47",
        "TM48",
        "TM49",
        "TM50",
        "TM51",
        "TM52",
        "TM53",
        "TM54",
        "TM55", // 0xFF
    };

    // Item prices, halved for selling
    static final int[] item_prices = {
        0, // 0x00
        0,
        1200,
        600,
        200,
        0,
        0,
        0,
        0,
        0,
        0,
        100,
        250,
        250,
        250,
        200,
        3000, // 0x10
        2500,
        1200,
        700,
        300,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        550,
        350,
        0,
        2100, // 0x20
        2100,
        2100,
        9800,
        9800,
        9800,
        9800,
        9800,
        4800,
        0,
        0,
        0,
        0, // 0x2C
        0,
        950,
        2100,
        0, // 0x30
        10000,
        0, // 0x32
        1000,
        600,
        1500,
        4000,
        700,
        500,
        700,
        650,
        0,
        200,
        300,
        350,
        0,
        0, // 0x40
        500,
        550,
        350,
        350,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0, // 0x50
        0,
        0,
        0, // 0x53
        0, // Start of glitch items
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0, // 0x60
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0, // 0x70
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0, // 0x80
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0, // 0x90
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0, // 0xA0
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0, // 0xB0
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0, // 0xC0
        0,
        0,
        0, // End of glitch items
        0, // 0xC4
        0,
        0,
        0,
        0,
        3000, // Start of TMs
        2000,
        2000,
        1000,
        3000,
        4000,
        2000,
        4000, // 0xD0
        3000,
        4000,
        2000,
        1000,
        4000,
        5000,
        5000,
        5000,
        3000,
        2000,
        3000,
        2000,
        5000,
        5000,
        5000,
        2000, // 0xE0
        5000,
        4000,
        5000,
        2000,
        4000,
        1000,
        2000,
        1000,
        1000,
        2000,
        4000,
        2000,
        2000,
        5000,
        2000,
        4000, // 0xF0
        2000,
        2000,
        5000,
        2000,
        2000,
        4000,
        3000,
        4000,
        4000,
        2000,
        0, // Glitch TMs (51 - 55)
        0,
        0,
        0,
        0, // 0xFF
    };

    static final int numTrainerClasses = 47;
    static final String[] trainer_class_names = {
        "xxx",
        "YOUNGSTER",
        "BUG CATCHER",
        "LASS",
        "SAILOR",
        "JRTRAINERM",
        "JRTRAINERF",
        "POKEMANIAC",
        "SUPER NERD",
        "HIKER",
        "BIKER",
        "BURGLAR",
        "ENGINEER",
        "JUGGLER X", // Not used
        "FISHER",
        "SWIMMER",
        "CUEBALL",
        "GAMBLER",
        "BEAUTY",
        "PSYCHIC",
        "ROCKER",
        "JUGGLER",
        "TAMER",
        "BIRDKEEPER",
        "BLACKBELT",
        "RIVAL1",
        "PROFOAK",
        "SCIENTIST",
        "GIOVANNI",
        "ROCKET",
        "COOLTRAINERM",
        "COOLTRAINERF",
        "BRUNO",
        "BROCK",
        "MISTY",
        "LTSURGE",
        "ERIKA",
        "KOGA",
        "BLAINE",
        "SABRINA",
        "GENTLEMAN",
        "RIVAL2",
        "RIVAL3",
        "LORELEI",
        "CHANNELER",
        "AGATHA",
        "LANCE",
        "JESSIEJAMES"
    };

    static final int[] trainer_base_money = {
        99,
        15,
        10,
        15,
        30,
        20,
        20,
        50,
        25,
        35,
        20,
        90,
        50,
        35, // Not used, maybe same as juggler?
        35,
         5,
        25,
        70,
        70,
        10,
        25,
        35,
        40,
        25,
        25,
        35,
        99, // PROF OAK, unconfirmed
        50,
        99,
        30,
        35,
        35,
        99,
        99,
        99,
        99,
        99,
        99,
        99,
        99,
        70,
        65,
        99,
        99,
        30,
        99,
        99,
        30, // JESSIEJAMES
    };
}
